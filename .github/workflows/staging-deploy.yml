name: Staging Deploy (create -> test -> destroy)

on:
  workflow_dispatch: {}   # <<< makes the "Run workflow" button work

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME:     ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD:     ${{ secrets.ACR_PASSWORD }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      RESOURCE_GROUP:   sit722-staging-rg
      LOCATION:         australiaeast
      NAME:             staging-product
      IMAGE:            product_service:testing
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Ensure resource group
        run: az group create --name "$RESOURCE_GROUP" --location "$LOCATION"

      - name: Delete old container (ignore if missing)
        run: az container delete -g "$RESOURCE_GROUP" -n "$NAME" --yes || true

      - name: Deploy container from ACR
        run: |
          az container create \
            --resource-group "$RESOURCE_GROUP" \
            --name "$NAME" \
            --image "$ACR_LOGIN_SERVER/$IMAGE" \
            --registry-login-server "$ACR_LOGIN_SERVER" \
            --registry-username "$ACR_USERNAME" \
            --registry-password "$ACR_PASSWORD" \
            --dns-name-label "$NAME" \
            --ports 8000

      - name: Wait for public IP and /health
        run: |
          IP=""
          for i in {1..30}; do
            IP=$(az container show -g "$RESOURCE_GROUP" -n "$NAME" --query ipAddress.ip -o tsv || true)
            [ -n "$IP" ] && [ "$IP" != "null" ] && break
            echo "Waiting for IP... ($i/30)"; sleep 5
          done
          echo "IP=$IP"
          if [ -z "$IP" ] || [ "$IP" = "null" ]; then
            echo "No IP assigned"; exit 1
          fi

          for i in {1..30}; do
            if curl -fsS "http://$IP:8000/health" >/dev/null; then
              echo "Staging healthy at http://$IP:8000/health"
              exit 0
            fi
            echo "Waiting for /health... ($i/30)"; sleep 5
          done
          echo "Health check failed"; exit 1

      - name: Clean up staging (save cost)
        if: always()
        run: az container delete -g "$RESOURCE_GROUP" -n "$NAME" --yes || true