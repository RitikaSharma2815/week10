name: Staging Deploy (create -> test -> destroy)

on:
  workflow_run:
    workflows: ["CI (tests → build → push)"]
    types:
      - completed

jobs:
  staging-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      RESOURCE_GROUP: sit722-staging-rg
      LOCATION: australiaeast
      PREFIX: svc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      # --- Create staging group ---
      - name: Ensure resource group exists
        run: |
          az group create --name $RESOURCE_GROUP --location $LOCATION

      # --- Deploy product service ---
      - name: Deploy Product Service (staging)
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name ${PREFIX}-product \
            --image $ACR_LOGIN_SERVER/product_service:testing \
            --registry-login-server $ACR_LOGIN_SERVER \
            --registry-username $ACR_USERNAME \
            --registry-password $ACR_PASSWORD \
            --dns-name-label ${PREFIX}-product-$RANDOM \
            --ports 8000

      # --- Wait and health check ---
      - name: Wait for Product Service health
        run: |
          IP=$(az container show -g $RESOURCE_GROUP -n ${PREFIX}-product --query ipAddress.ip -o tsv)
          echo "Product Service IP: $IP"

          for i in {1..30}; do
            if curl -fsS "http://$IP:8000/health" >/dev/null; then
              echo "Product Service is healthy!"
              exit 0
            fi
            echo "Waiting for health... ($i/30)"
            sleep 5
          done
          echo "Service did not become healthy in time" >&2
          exit 1

      # --- Clean up old containers ---
      - name: Clean up staging containers
        if: always()
        run: |
          echo "Cleaning up staging containers..."
          az container delete --resource-group $RESOURCE_GROUP --name ${PREFIX}-product --yes || true
