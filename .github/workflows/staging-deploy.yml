name: Staging Deploy (create -> test -> destroy)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI (tests -> build -> push)"]
    types: [completed]
    branches: [testing]

jobs:
  deploy-staging:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success') }}
    runs-on: ubuntu-latest
    env:
      RG: sit722-staging-rg
      REGION: australiaeast
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create RG
        run: az group create -n "$RG" -l "$REGION"

      - name: Create product DB
        run: |
          az container create -g "$RG" -n svc-product-db \
            --image docker.io/library/postgres:15-alpine \
            --os-type Linux --cpu 1 --memory 1 \
            --ports 5432 --ip-address Public \
            --environment-variables POSTGRES_DB=products POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres \
            --location "$REGION"
          DB_IP=$(az container show -g "$RG" -n svc-product-db --query ipAddress.ip -o tsv)
          echo "DB_IP=$DB_IP" >> $GITHUB_ENV

      - name: Deploy product-service
        run: |
          az container create -g "$RG" -n svc-product \
            --image "$ACR_LOGIN_SERVER/product_service:testing" \
            --registry-login-server "$ACR_LOGIN_SERVER" \
            --registry-username "$ACR_USERNAME" \
            --registry-password "$ACR_PASSWORD" \
            --os-type Linux --cpu 1 --memory 1 \
            --ports 8000 --ip-address Public \
            --environment-variables \
              POSTGRES_HOST=${{ env.DB_IP }} \
              POSTGRES_USER=postgres \
              POSTGRES_PASSWORD=postgres \
              POSTGRES_DB=products \
            --location "$REGION"
          PRODUCT_IP=$(az container show -g "$RG" -n svc-product --query ipAddress.ip -o tsv)
          echo "PRODUCT_IP=$PRODUCT_IP" >> $GITHUB_ENV

      - name: Deploy frontend
        run: |
          az container create -g "$RG" -n web-frontend \
            --image "$ACR_LOGIN_SERVER/frontend:testing" \
            --registry-login-server "$ACR_LOGIN_SERVER" \
            --registry-username "$ACR_USERNAME" \
            --registry-password "$ACR_PASSWORD" \
            --os-type Linux --cpu 1 --memory 1.5 \
            --ports 80 --ip-address Public \
            --dns-name-label sit722-$RANDOM \
            --location "$REGION"

      - name: Smoke test product endpoint
        run: |
          echo "Testing http://$PRODUCT_IP:8000"
          for i in {1..12}; do
            if curl -fsS "http://$PRODUCT_IP:8000" | grep -q 'Welcome to the Product Service'; then
              echo "OK"; exit 0
            fi
            echo "retry $i"; sleep 5
          done
          echo "Product endpoint failed" >&2
          exit 1

      - name: Destroy staging RG (always)
        if: always()
        run: az group delete -n "$RG" --yes --no-wait